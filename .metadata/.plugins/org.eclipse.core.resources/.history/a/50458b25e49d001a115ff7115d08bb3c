package main;

public class Crop {
	private String species;
	private double purchasePrice;
	private double sellingPrice;
	private int daysUntilMature;
	private double health;
	private int dayPlanted;
	private static int count = 1;
	private int id;
	
	/**
	 * Crop constructor
	 * @param species - species of the crop
	 * @param purchasePrice - cost to buy the crop, in dollars
	 * @param sellingPrice - cost to sell the crop, in dollars
	 * @param daysUntilMature - days until the crop is ready to harvest
	 * @param health - health of the crop
	 * @param dayPlanted - day the crop was planted
	 */
	public Crop(String species, double purchasePrice, double sellingPrice, int daysUntilMature, double health, int dayPlanted) {
		this.species = species;
		this.purchasePrice = purchasePrice;
		this.sellingPrice = sellingPrice;
		//ensure days to mature is not negative
		if (daysUntilMature <= 0) {
			//the minimum time for a crop to mature
			this.daysUntilMature = 1;
		} else {
			this.daysUntilMature = daysUntilMature;
		}
		this.health = health;
		this.dayPlanted = dayPlanted;
		this.id = count++;
	}

	/**
	 * 
	 * @return species of the crop
	 */
	public String getSpecies() {
		return this.species;
	}
	
	/**
	 * 
	 * @return unique ID number of the crop
	 */
	public int getId() {
		return this.id;
	}
	
	/**
	 * 
	 * @return cost to buy the crop, in dollars
	 */
	public double getPurchasePrice() {
		return this.purchasePrice;
	}
	
	/**
	 * 
	 * @param purchasePrice cost to set for purchasing the crop, in dollars
	 */
	public void setPurchasePrice(double purchasePrice) {
		this.purchasePrice = purchasePrice;
	}
	
	/**
	 * 
	 * @return cost to sell crop, in dollars
	 */
	public double getSellingPrice() {
		return this.sellingPrice;
	}
	
	/**
	 * 
	 * @param sellingPrice cost to set for selling the crop, in dollars
	 */
	public void setSellingPrice(double sellingPrice) {
		this.sellingPrice = sellingPrice;
	}
	
	/**
	 * 
	 * @return number of days until crop is mature
	 */
	public int getDaysUntilMature() {
		return this.daysUntilMature;
	}
	
	/**
	 * 
	 * @param days - days until the crop is mature
	 * @param growthBonus - reduction of days until crop is mature
	 */
	public void setDaysUntilMature(int days, int growthBonus) {
		this.daysUntilMature = days - growthBonus;
		if(daysUntilMature < 0) daysUntilMature = 0;
	}
	
	/**
	 * 
	 * @param day - day the crop was planted in the farm
	 */
	public void setDayPlanted(int day) {
		this.dayPlanted = day;
	}
	
	/**
	 * 
	 * @param currentDay - what day the user is on in the game
	 * @return - how much time the crop has been planted, in days
	 */
	public int getAge(int currentDay) {
		//Days count down to 0
		return this.dayPlanted - currentDay;
	}
	
	/**
	 * 
	 * @return health of the crop, range 1-10 (inclusive)
	 */
	public double getHealth() {
		return this.health;
	}
	
	/**
	 * 
	 * @param health - health to set for the crop, range 1-10 (inclusive)
	 */
	public void setHealth(double health) {
		this.health = health;
	}
	
	/**
	 * Reduction of days until mature
	 * @param reduction - number of days to reduce days until mature by
	 */
	public void reduceDaysUntilMature(int reduction) {
		daysUntilMature -= reduction;
		if(daysUntilMature < 0) daysUntilMature = 0;
	}
	//END methods
}
